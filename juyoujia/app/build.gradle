apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'
apply from: 'legu.gradle'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true

        dexOptions {
            javaMaxHeapSize "2g"
        }
        ndk {
            //根据需要 自行选择添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', "x86", "mips"
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
        manifestPlaceholders = [
                //A91NZWKWD61T 属于应用"居有家驿站"独有的 Android AppKey, 用于配置SDK
                MTA_APPKEY   : "AD218XMRJY6R",
                //标注应用推广渠道用以区分新用户来源，可填写如应用宝，豌豆荚等
                MTA_CHANNEL  : "main,oppo,huawei,xiaomi,qq,360,uc,baidu",
                XG_ACCESS_ID : "",
                XG_ACCESS_KEY: "",
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "4ca4a0a03efc46df703ebea9",//值来自开发者平台取得的AppKey
                JPUSH_CHANNEL: "default_developer",
        ]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    realm {
        syncEnabled = true;
    }


    signingConfigs {
        releaseConfig {
            storeFile file("../jyjKeyStore.jks")
            storePassword "jyj!@#123"
            keyAlias "jyjkey"
            keyPassword "jyj!@#123"
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            signingConfig signingConfigs.releaseConfig
            // 混淆
            minifyEnabled false
            // Zipalign优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            signingConfig signingConfigs.releaseConfig
            // 混淆
            minifyEnabled false
            // Zipalign优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    flavorDimensions "channel"

    productFlavors {

        main {
            dimension "channel"
            manifestPlaceholders = [JYJ_CHANNEL_VALUE: "main"]
        }
        opposc {
            dimension "channel"
            manifestPlaceholders = [JYJ_CHANNEL_VALUE: "oppo"]
        }
        vivosc {
            dimension "channel"
            manifestPlaceholders = [JYJ_CHANNEL_VALUE: "vivo"]
        }

        huaweisc {
            dimension "channel"
            manifestPlaceholders = [JYJ_CHANNEL_VALUE: "huawei"]
        }
        xiaomisc {
            dimension "channel"
            manifestPlaceholders = [JYJ_CHANNEL_VALUE: "xiaomi"]
        }
        txyyb {
            dimension "channel"
            manifestPlaceholders = [JYJ_CHANNEL_VALUE: "qq"]
        }
        aliuc {
            dimension "channel"
            manifestPlaceholders = [JYJ_CHANNEL_VALUE: "uc"]
        }
        baidusc {
            dimension "channel"
            manifestPlaceholders = [JYJ_CHANNEL_VALUE: "baidu"]
        }
    }

    // 自定义输出配置
    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName
                if (variant.buildType.name.equals('debug')) {
                    fileName = "app-debug.apk"
                } else {
                    //outputFile.name.replace(".apk", "-v${defaultConfig.versionCode}.apk")
                    fileName = "jyj-release_${variant.productFlavors[0].name}_v${defaultConfig.versionCode}.apk"
                }
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':easyandroid')
    //butterknife viewInject
    compile "com.jakewharton:butterknife:$rootProject.butterknife"
    compile "com.jakewharton:butterknife-compiler:$rootProject.butterknife"
    compile "com.jaeger.statusbarutil:library:$rootProject.statusbarutil"
    //广告条轮播
    compile 'com.youth.banner:banner:1.4.10'
    compile 'com.github.hotchemi:permissionsdispatcher:2.3.1'
    compile 'com.github.LidongWen:MultiTypeAdapter:0.2.6'
    //compile 'com.android.support.constraint:constraint-layout:1.1.3'
    compile 'com.android.support.constraint:constraint-layout:1.1.3'
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.3.1'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.contrarywind:Android-PickerView:4.1.0'
    compile 'com.wang.avi:library:1.0.2'
    compile 'fm.jiecao:jiecaovideoplayer:5.5.2'
    //compile project(':gyjzbar')
    compile 'com.jwenfeng.pulltorefresh:library:1.2.7'
    compile files('libs/wechat-sdk-android-with-mta-1.0.2.jar')
    compile 'com.github.LtLei:RxCache:1.0.5'
    //MTA主包
    compile 'com.qq.mta:mta:3.4.7-Release'
    //MID基础包
    compile 'com.tencent.mid:mid:4.06-Release'
    //首页复杂类型布局
    compile 'me.drakeet.multitype:multitype:3.3.0'
    compile files('libs/umeng-common-2.1.0.jar')
    compile files('libs/ocr-sdk.jar')
    //PushSDK必须依赖utdid库，所以需要加入对应依赖
    compile 'com.umeng.umsdk:utdid:1.1.5.3'
    //PushSDK
    compile 'com.umeng.umsdk:push:6.0.1'
    compile 'cn.jiguang.sdk:jpush:3.3.6'
    // 此处以JPush 3.3.6 版本为例。
    compile 'cn.jiguang.sdk:jcore:2.1.6'
    // 此处以JCore 2.1.6 版本为例。
    //信鸽jar
    compile 'com.tencent.xinge:xinge:3.2.7-Release'
    //jg包
    compile 'com.tencent.jg:jg:1.1'
    //wup包
    compile 'com.tencent.wup:wup:1.0.0.E-Release'
    //mid包
    compile 'com.tencent.mid:mid:4.0.6-release'
    compile 'com.github.lzyzsd:jsbridge:1.0.4'
    //alipay
    compile(name: 'alipaySdk-15.6.8-20191021122455-noUtdid', ext: 'aar')
    compile files('libs/HomeCtrl.jar')
    compile 'com.github.mcxtzhang:SwipeDelMenuLayout:V1.2.1'
}
